{"ast":null,"code":"import api from './apiConfig';\n\n//TODO: Code cleaning required\n\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      throw {\n        message: errorMessage\n      };\n    }\n  },\n  register: async (name, email, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      throw {\n        message: errorMessage\n      };\n    }\n  },\n  logout: () => {\n    return Promise.resolve();\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["api","AuthService","login","email","password","response","post","data","error","_error$response","_error$response$data","errorMessage","message","register","name","_error$response2","_error$response2$data","logout","Promise","resolve"],"sources":["/Users/abhishekverma/Desktop/Tic-Tac-Toe/src/api/authService.js"],"sourcesContent":["import api from './apiConfig';\n\n//TODO: Code cleaning required\n\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Login failed';\n      throw { message: errorMessage };\n    }\n  },\n\n  register: async (name, email, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        name,\n        email,\n        password,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Registration failed';\n      throw { message: errorMessage };\n    }\n  },\n\n  logout: () => {\n    return Promise.resolve();\n  },\n};\n\nexport default AuthService; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;;AAE7B;;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,cAAc;MAClE,MAAM;QAAEI,OAAO,EAAED;MAAa,CAAC;IACjC;EACF,CAAC;EAEDE,QAAQ,EAAE,MAAAA,CAAOC,IAAI,EAAEX,KAAK,EAAEC,QAAQ,KAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAE;QAChDQ,IAAI;QACJX,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MACd,MAAML,YAAY,GAAG,EAAAI,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBR,KAAK,KAAI,qBAAqB;MACzE,MAAM;QAAEI,OAAO,EAAED;MAAa,CAAC;IACjC;EACF,CAAC;EAEDM,MAAM,EAAEA,CAAA,KAAM;IACZ,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B;AACF,CAAC;AAED,eAAelB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}