{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n//TODO: Need more optimziation \n\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    authRequest: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    authSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    authFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logoutSuccess: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    updateUserSuccess: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }\n  }\n});\nexport const {\n  authRequest,\n  authSuccess,\n  authFailure,\n  logoutSuccess,\n  clearError,\n  updateUserSuccess\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","isAuthenticated","loading","error","authSlice","name","reducers","authRequest","state","authSuccess","action","payload","authFailure","logoutSuccess","clearError","updateUserSuccess","actions","reducer"],"sources":["/Users/abhishekverma/Desktop/Tic-Tac-Toe/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n//TODO: Need more optimziation \n\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    authRequest: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n\n    authSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n\n    authFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    logoutSuccess: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n\n    clearError: (state) => {\n      state.error = null;\n    },\n\n    updateUserSuccess: (state, action) => {\n      state.user = { ...state.user, ...action.payload };\n    }\n  },\n});\n\nexport const {\n  authRequest,\n  authSuccess,\n  authFailure,\n  logoutSuccess,\n  clearError,\n  updateUserSuccess\n} = authSlice.actions;\n\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDM,WAAW,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACT,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCQ,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDS,WAAW,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IAEDE,aAAa,EAAGL,KAAK,IAAK;MACxBA,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDW,UAAU,EAAGN,KAAK,IAAK;MACrBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDY,iBAAiB,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACT,IAAI,GAAG;QAAE,GAAGS,KAAK,CAACT,IAAI;QAAE,GAAGW,MAAM,CAACC;MAAQ,CAAC;IACnD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,WAAW;EACXE,WAAW;EACXG,WAAW;EACXC,aAAa;EACbC,UAAU;EACVC;AACF,CAAC,GAAGX,SAAS,CAACY,OAAO;AAErB,eAAeZ,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}