{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useRef, useState } from 'react';\nimport StatsService from '../api/statsService';\nconst initialState = {\n  wins: 0,\n  losses: 0,\n  draws: 0,\n  loading: false,\n  error: null\n};\nconst useStats = () => {\n  _s();\n  const [statsState, setStatsState] = useState(initialState);\n  const isRequestInProgress = useRef(false);\n  const getUserStats = useCallback(async () => {\n    if (isRequestInProgress.current) {\n      return;\n    }\n    try {\n      isRequestInProgress.current = true;\n      setStatsState(state => ({\n        ...state,\n        loading: true,\n        error: null\n      }));\n      const data = await StatsService.getUserStats();\n      setStatsState(state => {\n        var _data$stats, _data$stats2, _data$stats3;\n        return {\n          ...state,\n          loading: false,\n          wins: ((_data$stats = data.stats) === null || _data$stats === void 0 ? void 0 : _data$stats.wins) || data.wins || 0,\n          losses: ((_data$stats2 = data.stats) === null || _data$stats2 === void 0 ? void 0 : _data$stats2.losses) || data.losses || 0,\n          draws: ((_data$stats3 = data.stats) === null || _data$stats3 === void 0 ? void 0 : _data$stats3.draws) || data.draws || 0,\n          error: null\n        };\n      });\n      return data;\n    } catch (error) {\n      setStatsState(state => ({\n        ...state,\n        loading: false,\n        error: error.message || 'Failed to get user stats'\n      }));\n      throw error;\n    } finally {\n      setTimeout(() => {\n        isRequestInProgress.current = false;\n      }, 200);\n    }\n  }, []);\n  const recordGameResult = useCallback(async result => {\n    try {\n      setStatsState(state => ({\n        ...state,\n        loading: true,\n        error: null\n      }));\n      await StatsService.recordGameResult(result);\n      setStatsState(state => {\n        let newState = {\n          ...state,\n          loading: false\n        };\n        if (result === 'win') newState.wins += 1;else if (result === 'loss') newState.losses += 1;else if (result === 'draw') newState.draws += 1;\n        return newState;\n      });\n      getUserStats();\n    } catch (error) {\n      setStatsState(state => ({\n        ...state,\n        loading: false,\n        error: error.message || 'Failed to record game result'\n      }));\n      throw error;\n    }\n  }, [getUserStats]);\n  const clearError = useCallback(() => {\n    setStatsState(state => ({\n      ...state,\n      error: null\n    }));\n  }, []);\n  return {\n    ...statsState,\n    getUserStats,\n    recordGameResult,\n    clearError\n  };\n};\n_s(useStats, \"Wdzy/SYUGLFl6qAp2CiFAIY1bk0=\");\nexport default useStats;","map":{"version":3,"names":["useCallback","useRef","useState","StatsService","initialState","wins","losses","draws","loading","error","useStats","_s","statsState","setStatsState","isRequestInProgress","getUserStats","current","state","data","_data$stats","_data$stats2","_data$stats3","stats","message","setTimeout","recordGameResult","result","newState","clearError"],"sources":["/Users/abhishekverma/Desktop/Tic-Tac-Toe/src/hooks/useStats.js"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport StatsService from '../api/statsService';\n\nconst initialState = {\n  wins: 0,\n  losses: 0,\n  draws: 0,\n  loading: false,\n  error: null,\n};\n\nconst useStats = () => {\n  const [statsState, setStatsState] = useState(initialState);\n  const isRequestInProgress = useRef(false);\n\n  const getUserStats = useCallback(async () => {\n    if (isRequestInProgress.current) {\n      return;\n    }\n\n    try {\n      isRequestInProgress.current = true;\n      setStatsState(state => ({ ...state, loading: true, error: null }));\n\n      const data = await StatsService.getUserStats();\n\n      setStatsState(state => ({\n        ...state,\n        loading: false,\n        wins: data.stats?.wins || data.wins || 0,\n        losses: data.stats?.losses || data.losses || 0,\n        draws: data.stats?.draws || data.draws || 0,\n        error: null,\n      }));\n\n      return data;\n    } catch (error) {\n      setStatsState(state => ({\n        ...state,\n        loading: false,\n        error: error.message || 'Failed to get user stats'\n      }));\n      throw error;\n    } finally {\n      setTimeout(() => {\n        isRequestInProgress.current = false;\n      }, 200);\n    }\n  }, []);\n\n  const recordGameResult = useCallback(async (result) => {\n    try {\n      setStatsState(state => ({ ...state, loading: true, error: null }));\n\n      await StatsService.recordGameResult(result);\n\n      setStatsState(state => {\n        let newState = { ...state, loading: false };\n        if (result === 'win') newState.wins += 1;\n        else if (result === 'loss') newState.losses += 1;\n        else if (result === 'draw') newState.draws += 1;\n        return newState;\n      });\n\n      getUserStats();\n    } catch (error) {\n      setStatsState(state => ({\n        ...state,\n        loading: false,\n        error: error.message || 'Failed to record game result'\n      }));\n      throw error;\n    }\n  }, [getUserStats]);\n\n  const clearError = useCallback(() => {\n    setStatsState(state => ({ ...state, error: null }));\n  }, []);\n\n  return {\n    ...statsState,\n    getUserStats,\n    recordGameResult,\n    clearError\n  };\n};\n\nexport default useStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}