{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthService from '../api/authService';\nimport { authFailure, authRequest, authSuccess, clearError, logoutSuccess } from '../redux/slices/authSlice';\nimport { resetGame as resetGameAction } from '../redux/slices/gameSlice';\nconst useAuth = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user,\n    isAuthenticated,\n    loading,\n    error\n  } = useSelector(state => state.auth);\n  const login = useCallback(async (email, password) => {\n    try {\n      dispatch(authRequest());\n      const data = await AuthService.login(email, password);\n      if (data.user && data.token) {\n        dispatch(authSuccess({\n          user: data.user,\n          token: data.token\n        }));\n      }\n      return data;\n    } catch (error) {\n      const errorMessage = error.message || 'Login failed. Please try again.';\n      dispatch(authFailure(errorMessage));\n      return {\n        error: errorMessage\n      };\n    }\n  }, [dispatch]);\n  const register = useCallback(async (name, email, password) => {\n    try {\n      dispatch(authRequest());\n      const data = await AuthService.register(name, email, password);\n      if (data.user && data.token) {\n        dispatch(authSuccess({\n          user: data.user,\n          token: data.token\n        }));\n      }\n      return data;\n    } catch (error) {\n      const errorMessage = error.message || 'Registration failed. Please try again.';\n      dispatch(authFailure(errorMessage));\n      return {\n        error: errorMessage\n      };\n    }\n  }, [dispatch]);\n  const logout = useCallback(() => {\n    dispatch(resetGameAction());\n    AuthService.logout();\n    dispatch(logoutSuccess());\n  }, [dispatch]);\n  const resetAuthError = useCallback(() => {\n    dispatch(clearError());\n  }, [dispatch]);\n  return {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    resetAuthError\n  };\n};\n_s(useAuth, \"xyi5qd4f2K8dDypoPcECSQyLqBc=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport default useAuth;","map":{"version":3,"names":["useCallback","useDispatch","useSelector","AuthService","authFailure","authRequest","authSuccess","clearError","logoutSuccess","resetGame","resetGameAction","useAuth","_s","dispatch","user","isAuthenticated","loading","error","state","auth","login","email","password","data","token","errorMessage","message","register","name","logout","resetAuthError"],"sources":["/Users/abhishekverma/Desktop/Tic-Tac-Toe/src/hooks/useAuth.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthService from '../api/authService';\nimport { authFailure, authRequest, authSuccess, clearError, logoutSuccess } from '../redux/slices/authSlice';\nimport { resetGame as resetGameAction } from '../redux/slices/gameSlice';\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n  const { user, isAuthenticated, loading, error } = useSelector((state) => state.auth);\n\n  const login = useCallback(async (email, password) => {\n    try {\n      dispatch(authRequest());\n      const data = await AuthService.login(email, password);\n\n      if (data.user && data.token) {\n        dispatch(authSuccess({\n          user: data.user,\n          token: data.token\n        }));\n      }\n\n      return data;\n    } catch (error) {\n      const errorMessage = error.message || 'Login failed. Please try again.';\n      dispatch(authFailure(errorMessage));\n      return { error: errorMessage };\n    }\n  }, [dispatch]);\n\n  const register = useCallback(async (name, email, password) => {\n    try {\n      dispatch(authRequest());\n      const data = await AuthService.register(name, email, password);\n\n      if (data.user && data.token) {\n        dispatch(authSuccess({\n          user: data.user,\n          token: data.token\n        }));\n      }\n\n      return data;\n    } catch (error) {\n      const errorMessage = error.message || 'Registration failed. Please try again.';\n      dispatch(authFailure(errorMessage));\n      return { error: errorMessage };\n    }\n  }, [dispatch]);\n\n  const logout = useCallback(() => {\n    dispatch(resetGameAction());\n    AuthService.logout();\n    dispatch(logoutSuccess());\n  }, [dispatch]);\n\n  const resetAuthError = useCallback(() => {\n    dispatch(clearError());\n  }, [dispatch]);\n\n  return {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    resetAuthError\n  };\n};\n\nexport default useAuth; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}